#!/usr/bin/env bash

# https://github.com/bashup/realpaths
realpath.location(){ realpath.follow "$1"; realpath.absolute "$REPLY" ".."; }
realpath.dirname() { REPLY=.; ! [[ $1 =~ /+[^/]+/*$|^//$ ]] || REPLY="${1%${BASH_REMATCH[0]}}"; REPLY=${REPLY:-/}; }
realpath.follow() {
	local target
	while [[ -L "$1" ]] && target=$(readlink -- "$1"); do
		realpath.dirname "$1"
		# Resolve relative to symlink's directory
		[[ $REPLY != . && $target != /* ]] && REPLY=$REPLY/$target || REPLY=$target
		# Break out if we found a symlink loop
		for target; do [[ $REPLY == "$target" ]] && break 2; done
		# Add to the loop-detect list and tail-recurse
		set -- "$REPLY" "$@"
	done
	REPLY="$1"
}
realpath.absolute() {
	REPLY=$PWD; local eg=extglob; ! shopt -q $eg || eg=; ${eg:+shopt -s $eg}
	while (($#)); do case $1 in
		//|//[^/]*) REPLY=//; set -- "${1:2}" "${@:2}" ;;
		/*) REPLY=/; set -- "${1##+(/)}" "${@:2}" ;;
		*/*) set -- "${1%%/*}" "${1##${1%%/*}+(/)}" "${@:2}" ;;
		''|.) shift ;;
		..) realpath.dirname "$REPLY"; shift ;;
		*) REPLY="${REPLY%/}/$1"; shift ;;
	esac; done; ${eg:+shopt -u $eg}
}



realpath.location "${BASH_SOURCE[0]}"
if [ -d "$REPLY"/../lib/bash-args ]; then
	# distribution: linux distribution
	ARGS_LIB_DIR="$REPLY/../lib/bash-args"
elif [ -d "$REPLY"/../lib ]; then
	# distribution channel: git / basher
	ARGS_LIB_DIR="$REPLY/../lib"
else
	echo "Error: Could not determine \$ARGS_LIB_DIR"
	exit 1
fi

source "$ARGS_LIB_DIR/util/util.sh"
source "$ARGS_LIB_DIR/args-parse.sh"
